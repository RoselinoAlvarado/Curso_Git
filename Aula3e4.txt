    1  ls
    2  ls -a
    3  ls -l
    4  pwd
    5  git config --global user.name ‘Roselino José Alvarado Alvarado’
    6  git config user.name
    7  git config --global user.name ‘Roselino Alvarado’
    8  git config user.name
    9  git config --global user.email ‘roselinoalvarado@gmail.com’
   10  git config user.email
   11  git config user.name
   12  cd Desktop/
   13  mkdir Curso_Git
   14  cd Curso_Git/
   15  git config user.name
   16  ls
   17  git init
   18  git status
   19  echo '#Aprendendo usar o Git' > readme.md
   20  git status 
   21  git add readme.md
   22  git status
   23  git commit -m 'Commit inicial'
   24  git status
   25  echo '##Aula 1' >> readme.md 
   26  git status
   27  echo 'Kauê Maia' > participantes.txt
   28  git status
   29  git add .
   30  git status
   31  git restore --staged participantes.txt
   32  git status
   33  git add participantes.txt 
   34  git status
   35  git restore --staged .
   36  git status
   37  git status
   38  git commit -am 'Alteração no readme'
   39  git status
   40  git add participantes.txt 
   41  git status
   42  git commit -m 'Adicionado participantes.txt'
   43  history > Aula_3.txt
   44  git status
   45  git add .
   46  git commit -m 'Comandos da Aula 3'
   47  git status
   48  pwd
   49  git log
   50  ls
   51  cd Curso_Git/
   52  ls
   53  git log
   54  git log --prety= oneline
   55  git log --pretty=oneline
   56  git log --stat
   57  git log -p
   58  git log --since=20.minutes
   59  git log --since=10.hours
   60  git log --since=30.hours
   61  git log --since=60.hours
   62  touch teste
   63  git status
   64  git add teste
   65  git status
   66  git commit -m 'Commit de teste'
   67  git log --pretty=oneline
   68  git reset --soft HEAD~
   69  git log --pretty=oneline
   70  git status
   71  git commit -m 'Commit de teste'
   72  git log --pretty=oneline
   73  git reset --hard HEAD~
   74  git log --pretty=oneline
   75  git status
   76  git log --pretty=oneline
   77  git checkout HEAD~~
   78  git status
   79  git log --pretty=oneline
   80  git checkout master
   81  git log --pretty=oneline
   82  git checkout HEAD~2
   83  git log --pretty=oneline
   84  git checkout HEAD~
   85  git log --pretty=oneline
   86  git checkout master
   87  git log --pretty=oneline
   88  mkdir .vscode
   89  touch conf.txt
   90  mv conf.txt .vscode/
   91  ls .vscode/
   92  ls
   93  ls -a
   94  git status
   95  echo '.vscode/' > .gitignore
   96  git status
   97  touch pessoal.conf
   98  git status
   99  echo 'pessoal.conf' >> .gitignore
  100  git status
  101  git add .gitignore 
  102  git status
  103  git commit -m 'Adicionado arquivo .gitignore'
  104  git status
  105  history > Aula3e4.txt
